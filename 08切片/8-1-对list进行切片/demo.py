#!/usr/bin/env python
# -*- coding: utf-8 -*-
'''
demo.py
'''

L = ['Adam', 'Lisa', 'Bart', 'Paul']

# 取前3个元素，应该怎么做？

# 笨办法
print [L[0], L[1], L[2]]

# 扩展一下，取前N个元素就没辙了
# 取前N个元素，也就是索引为0-(N-1)的元素，可以用循环：

r = []
for i in range(3):
    r.append(L[i])
print r

# 对这种经常取指定索引范围的操作，用循环十分繁琐，因此，Python提供了切片（Slice）操作符，能大大简化这种操作。
# 对应上面的问题，取前3个元素，用一行代码就可以完成切片：

print L[0:3]

# L[0:3]表示，从索引0开始取，直到索引3为止，但不包括索引3。即索引0，1，2，正好是3个元素。

# 如果第一个索引是0，还可以省略：

print  L[:3]

# 也可以从索引1开始，取出2个元素出来：

print L[1:3]

# 只用一个 : ，表示从头到尾：

print L[:]

# 因此，L[:]实际上复制出了一个新list。

# 切片操作还可以指定第三个参数：start, stop, step

print L[::2]

# 第三个参数表示每N个取一个，上面的 L[::2] 会每两个元素取出一个来，也就是隔一个取一个。

